<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cinema.mapper.FilmListMapper">
  <resultMap id="BaseResultMap" type="com.cinema.entity.FilmList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="film_id" jdbcType="INTEGER" property="filmId" />
    <result column="sort" jdbcType="BIGINT" property="sort" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="description" jdbcType="VARCHAR" property="description" />

    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, film_id, sort, `type`, create_time
  </sql>
  <select id="pageQuery" resultMap="BaseResultMap">
    select
    fl.* , fi.title, fi.image
    from film_list AS fl
    left join film_info AS fi on fi.id = fl.film_id
    <where>
      <if test="title != null and title != ''">
        and fl.title = #{title}
      </if>
      <if test="type != null and type != ''">
        and fl.`type` = #{type}
      </if>
      <if test="filmId != null and filmId != ''">
        and fl.film_id = #{filmId}
      </if>
    </where>
    order by fl.sort asc
  </select>
    <select id="getByType" resultMap="BaseResultMap">
      select
      fl.* , fi.title, fi.image, fi.description
      from film_list AS fl
      left join film_info AS fi on fi.id = fl.film_id
      <where>
        <if test="type != null and type != ''">
          and fl.`type` = #{type}
        </if>
      </where>
      order by fl.sort asc
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
    delete from film_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cinema.entity.FilmList" useGeneratedKeys="true">
    insert into film_list (film_id, sort, `type`,
      create_time)
    values (#{filmId,jdbcType=INTEGER}, #{sort,jdbcType=BIGINT}, #{type,jdbcType=CHAR},
      #{createTime,jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.cinema.entity.FilmList">
    update film_list
    <set>
      <if test="filmId != null">
        film_id = #{filmId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
